变量的解构赋值学习要点：
  1、理解什么是一维数组、二维数组、多维数组
  2、数组的解构赋值【顺序解构】
    2.1、变量个数和元素个数一致；
    2.2、变量中存在扩展运算符“...”； Rest变量， Rest element
    2.3、变量个数比元素值个数多，结构不成攻的值为undefind,如果有扩展运算符，则为空数组 “[]”；
    2.4、变量个数比元素个数少，不完全结构，肯定有值；
    2.5、数组解构，右边一定是数组或其它可迭代的数据类型；
    2.6、数组解构赋值怎么指定默认值？什么时候默认值生效？

  3、对象的解构赋值【无序，仅和对象的属性有关】
    3.1、变量名与属性名一致 let { foo: foo } = { foo: 'aaa' }  ———— let { 属性名： 变量名 }
      属性名用于解构取值，变量名用于代码应用
    3.2、变量名与属性名不一致  let { foo: baz } = { foo: 'aaa' }
    3.3、加强对象混合数组的多层解构练习
    3.4、对象解构赋值怎么指定默认值？什么时候默认值会生效？
    
  4、注意点【了解】
    4.1、如果要将一个已经声明的变量用于解构赋值，记住正确的写法
    4.2、由于数组本质是特殊的对象，因此可以对数组进行对象属性的解构。数组的下标就相当于对象的属性
  5、字符串的解构赋值【了解】
  6、数值和布尔值的解构赋值【了解】
  
  7、函数参数的解构赋值【数组和对象解构赋值的应用非常多，还有默认值的指定】
  8、圆括号问题【正常开发，暂时不必关注】
  9、解构赋值的应用场景【用途，重点】
    9.1、交换变量的值【了解，多一种交换变量值的方法】
    9.2、从函数返回多个值【应用比较多】
    9.3、函数参数的定义，函数参数的默认值【重要】
    9.4、提取 JSON 数据【重要】
    9.5、遍历 Map 结构【先不学】
    9.6、输入模块的指定方法【重要】